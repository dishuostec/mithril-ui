@import "../../scss/utils";

$indicator-color: $grey-darker !default;

.indicator {
  $size: 1em;
  display: inline-block;
  margin: 0 0.2em;
  width: $size;
  height: $size;

  @keyframes rotate-45 {
    0% {
      transform: rotate(45deg);
    }
    100% {
      transform: rotate(405deg);
    }
  }

  &.is-dual-ring {
    &::after {
      content: " ";
      display: block;
      width: $size;
      height: $size;
      margin: pxToRem(1);
      border-radius: 50%;
      border: ($size/8) solid $indicator-color;
      border-color: $indicator-color transparent $indicator-color transparent;
      animation: rotate-45 1.2s cubic-bezier(0.785, 0.135, 0.15, 0.86) infinite;
    }
  }

  &.is-ring {
    position: relative;
    width: $size;
    height: $size;

    div {
      box-sizing: border-box;
      display: block;
      position: absolute;
      width: $size;
      height: $size;
      border: ($size/7) solid $indicator-color;
      border-radius: 50%;
      animation: rotate-45 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;
      border-color: $indicator-color transparent transparent transparent;

      &:nth-child(1) {
        animation-delay: -0.45s;
      }

      &:nth-child(2) {
        animation-delay: -0.3s;
      }

      &:nth-child(3) {
        animation-delay: -0.15s;
      }
    }
  }

  @keyframes indicator-facebook {
    0% {
      top: 5%;
      height: 95%;
    }
    50%, 100% {
      top: 20%;
      height: 60%;
    }
  }

  &.is-facebook {
    display: inline-block;
    position: relative;
    width: $size;
    height: $size;
    $length: $size / 8;

    div {
      display: inline-block;
      position: absolute;
      left: 0;
      width: $length * 2;
      background: $indicator-color;
      animation: indicator-facebook 1.2s cubic-bezier(0, 0.5, 0.5, 1) infinite;

      &:nth-child(1) {
        left: 0;
        animation-delay: -0.24s;
      }

      &:nth-child(2) {
        left: $length * 3;
        animation-delay: -0.12s;
      }

      &:nth-child(3) {
        left: $length * 6;
        animation-delay: 0s;
      }
    }
  }

  // Colors
  @each $name, $pair in $colors {
    $color: nth($pair, 1);
    $color-invert: nth($pair, 2);
    &.is-#{$name} {

      &.is-dual-ring {
        &::after {
          border-color: $color transparent $color transparent;
        }
      }

      &.is-ring {
        div {
          border-color: $color transparent transparent transparent;
        }
      }

      &.is-facebook {
        div {
          background-color: $color;
        }
      }
    }
  }

}
